name: release
on:
  push:
    tags:
      - 'v*'

env:
  VLS_VERSION:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
    steps:
    # Check out the repository under $GITHUB_WORKSPACE.
    - name: Checkout vls
      uses: actions/checkout@v2
      with:
        path: vls

    - name: Checkout vparse
      uses: actions/checkout@v2
      with:
        repository: 'sthenic/vparse'
        path: vparse
        token: ${{ secrets.VPARSE_TOKEN }}

    - name: Checkout vltoml
      uses: actions/checkout@v2
      with:
        repository: 'sthenic/vltoml'
        path: vltoml
        token: ${{ secrets.VPARSE_TOKEN }}

    - uses: jiro4989/setup-nim-action@v1.1.2
      with:
        nim-version: 'stable'

    - name: Install vparse and vltoml
      run: |
        pushd vparse
        nimble install -y
        popd
        pushd vltoml
        nimble install -y
        popd

    - name: Build Ubuntu
      if: ${{ matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-16.04'}}
      run: |
        cd vls
        nimble build -y
        source /etc/os-release
        PLATFORM_INFO="${ID}-${VERSION_ID}-$(uname -i)"
        ARCHIVE_FILENAME="vls-$(cat src/VERSION)-${PLATFORM_INFO}"
        cd build
        sh build_deb.sh "${PLATFORM_INFO}"
        cp *.deb ../
        cd ..
        tar -czf "${ARCHIVE_FILENAME}.tar.gz" vls LICENSE THIRD_PARTY_LICENSES.md CHANGELOG.md
        md5sum "${ARCHIVE_FILENAME}.tar.gz" > ${ARCHIVE_FILENAME}.tar.gz.md5
        md5sum "${ARCHIVE_FILENAME}.deb" > ${ARCHIVE_FILENAME}.deb.md5

    - name: Build macOS
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        cd vls
        nimble build -y
        ARCHIVE_FILENAME="vls-$(cat src/VERSION)-macos"
        tar -czf "${ARCHIVE_FILENAME}.tar.gz" vls LICENSE THIRD_PARTY_LICENSES.md CHANGELOG.md
        md5 "${ARCHIVE_FILENAME}.tar.gz" > ${ARCHIVE_FILENAME}.tar.gz.md5

    - name: Build Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        cd vls
        nimble build -y
        $ARCHIVE_FILENAME="vls-$(cat src/VERSION)-win_x86_64"
        7z a -tzip "${ARCHIVE_FILENAME}.zip" vls.exe LICENSE THIRD_PARTY_LICENSES.md CHANGELOG.md
        [string]$MD5 = (get-filehash -Algorithm MD5 "${ARCHIVE_FILENAME}.zip").Hash
        $MD5
        echo $MD5
        echo $MD5 > foo.txt
        cat foo.txt
        echo $MD5 > "${ARCHIVE_FILENAME}.zip.md5"
        dir

    - name: Upload artifacts
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.VPARSE_TOKEN }}
      with:
        files: |
          vls/*.tar.gz
          vls/*.tar.gz.md5
          vls/*.deb
          vls/*.deb.md5
          vls/*.zip
          vls/*.zip.md5
